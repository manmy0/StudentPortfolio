@page
@model StudentPortfolio.Pages.Dashboard.DashboardModel
@{
    ViewData["Title"] = "Dashboard";
}

@section DashboardNav {
    <li class="nav-item">
        <a class="nav-link active" aria-current="page" asp-page="/Dashboard/Dashboard">Dashboard</a>
    </li>
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>

        // make it json so its easier to deal with in js
        const summaryData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.CompetencyPerformanceSummary));

        const levelCounts = {};
        const chartLabels = ['Emerging', 'Developing', 'Proficient', 'Confident'];

        // go through each tracker and count how many competencies are at each level
        summaryData.forEach(item => {
            const level = item.HighestLevelId;
            levelCounts[level] = (levelCounts[level] || 0) + 1;
        });

        // add the count of the levels to an array
        const chartDataValues = [];
        for (let i = 1; i <= 4; i++) {
            chartDataValues.push(levelCounts[i] || 0);
        }

        const ctx = document.getElementById('competencyChart').getContext('2d');

        new Chart(ctx, {
            type: 'pie',
            data: {
                labels: chartLabels,
                datasets: [{
                    label: 'Competencies',
                    data: chartDataValues,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.8)',
                        'rgba(54, 162, 235, 0.8)',
                        'rgba(255, 206, 86, 0.8)',
                        'rgba(75, 192, 192, 0.8)'
                    ],
                    borderColor: '#fff',
                    borderWidth: 2
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        display: true,
                        position: 'top',
                    },
                    tooltip: {
                        // show the number of competencies when mouse is hovering
                        callbacks: {
                            label: function(context) {
                                let label = context.label || '';
                                if (label) {
                                    label += ': ';
                                }
                                if (context.parsed !== null) {
                                    label += context.parsed;
                                }
                                return label;
                            }
                        }
                    }
                }
            }
        });
    </script>
}


<div class="container mt-4">
    <div class="row gy-5">

        <!-- left column -->
        <div class="col-md-6">
            <div class="card shadow-sm p-3 mb-4">
                <h2 class="mb-4">Competency Performance Summary</h2>
                @if (Model.CompetencyPerformanceSummary.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered mb-0">
                            <thead class="table-dark">
                                <tr>
                                    <th>Competency</th>
                                    <th>Number of Performance Self Evaluation Examples</th>
                                    <th>Highest Attainment Level</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var tracker in Model.CompetencyPerformanceSummary)
                                {
                                    <tr>
                                        <td>@tracker.CompetencyDisplayId</td>
                                        <td>@tracker.TrackerCount</td>
                                        <td>@tracker.HighestLevelId</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <p class="text-muted">No competency tracking data found for your account.</p>
                }
            </div>
        </div>

        <!-- right column -->
        <div class="col-md-6">
            <div class="card shadow-sm p-3 mb-4">
                <h2 class="mb-4">Competency Attainment Levels</h2>
                <div class="card-body">
                    <canvas id="competencyChart"></canvas>
                </div>
            </div>

            <div class="card shadow-sm p-3">
                <h2 class="mb-4">Needs More Focus</h2>
                @if (Model.LowestFiveCompetencies.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered mb-0">
                            <thead class="table-dark">
                                <tr>
                                    <th>Competency</th>
                                    <th>Level</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var tracker in Model.LowestFiveCompetencies)
                                {
                                    <tr>
                                        <td>@tracker.CompetencyDisplayId</td>
                                        <td>@tracker.HighestLevelId</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <p class="text-muted">No competency data to display.</p>
                }
            </div>
        </div>
    </div>

    <div class="text-center mt-5">
        <a class="btn btn-primary btn-lg" asp-page="/Summary/Summary">View Summary</a>
    </div>
</div>