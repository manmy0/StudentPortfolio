@page
@model StudentPortfolio.Pages.Goals.CreateStepsModel

@{
    ViewData["Title"] = "CreateSteps";
}

<h3>Create Steps</h3>

<hr />

<div>
    <h3> Goal: @Model.Goal[0].Description</h3>
</div>

<form method="post">
    <div id="stepContainer">
        @for (int i = 0; i < Model.GoalSteps.Count; i++)
        {
            <div class="item-row">
                <label for="step">Step</label>
                <input class="form-control w-auto" style="margin-bottom: 20px" asp-for="GoalSteps[i].Step" name="step"/>
            </div>
        }
    </div>
    <div>
        <button class="btn btn-primary" id="addRowButton">Add Another Step</button>
        <button class="btn btn-success" type="submit">Save All Steps</button>
    </div>
</form>

<div style="margin-top: 20px;">
    <a class="btn btn-secondary" asp-page="Goals">Back to Goals</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
   
    <script>
        document.getElementById('addRowButton').addEventListener('click', function () {
            const container = document.getElementById('stepContainer');
            const index = container.children.length; // Get the next index

            const newRow = document.createElement('div');
            newRow.classList.add('item-row');
            newRow.innerHTML = `
                <label for="step">Step</label>
                <input class="form-control w-auto" style="margin-bottom: 20px" name="GoalSteps[${index}].step" />
            `;
            container.appendChild(newRow);
        });
    </script>
}
