@page
@model StudentPortfolio.Pages.Networking.NetworkingModel

@{
    ViewData["Title"] = "Networking";
}

@section NetworkingNav {
    <li class="nav-item">
        <a class="nav-link active" aria-current="page" asp-page="/Networking/Networking">Networking</a>
    </li>
}

<div class="page-container">
    <div class="column">
        <div class="content-block">
            <h4 class="box-title">Elevator Pitch</h4>

            <form method="post">
                <div class="info-box">
                    <textarea asp-for="Pitch" class="form-control" rows="7" placeholder="Create a pitch!">@Model.CurrentUser.Pitch</textarea>
                </div>

                <div style="text-align: end; margin-top: 10px;">

                    <button class="btn btn-success" type="submit" id="submitBtn" style="display: none;">Submit</button>
                    <button class="btn btn-danger" type="button" id="cancelBtn" style="display: none;">Cancel</button>


                    @if (Model.CurrentUser.Pitch != null)
                    {
                        <button class="btn btn-success" type="button" id="editBtn">Edit</button>

                    }
                    else
                    {
                        <button class="btn btn-success" type="button" id="createBtn">Create</button>
                    }
                </div>
            </form>
        </div>
    </div>
</div>

<hr />

<h3>Upcoming Events</h3>

<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.NetworkingEvent[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NetworkingEvent[0].Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NetworkingEvent[0].Location)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NetworkingEvent[0].Details)
            </th>
            <th>
                Questions to Ask
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.NetworkingEvent)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @String.Format("{0:dd/MM/yyyy h:mm tt}", item.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Location)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Details)
                </td>
                <td style="text-align: center;">
                    @foreach (var question in Model.NetworkingQuestion.Where(s => s.EventId == item.EventId))
                    {
                        <ul style="text-align: left;">
                            <li>
                                @Html.DisplayFor(modelItem => question.Question)
                            </li>
                        </ul>
                    }

                    @if (!Model.NetworkingQuestion.Any(s => s.EventId == item.EventId))
                    {
                        <a class="btn btn-primary" asp-page="CreateQuestions" asp-route-eventId="@item.EventId">Add Questions</a>
                    }
                    else
                    {
                        <a class="btn btn-success" asp-page="EditQuestions" asp-route-eventId="@item.EventId">Edit Questions</a>
                    }
                </td>
                <td>
                    <div class="icon-display">
                        <a asp-page="EditEvent" asp-route-id="@item.EventId" title="Edit Event">
                            <img src="~/img/edit-icon-png-3602.png" style="height: 30px; width: 30px;" alt="Edit Event">
                        </a>
                        <form asp-page-handler="Delete" method="post" asp-route-id="@item.EventId" onsubmit="return confirm('Are you sure you want to delete this event?');">
                            <button class="delete-button" name="action" value="deleteEvent" type="submit" title="Delete Event">
                                <img src="~/img/garbage-bin-png-10491.png" style="height: 40px; width: 40px;" alt="Delete Button">
                            </button>
                        </form>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<a class="btn btn-success" style="margin-bottom: 10px;" asp-page="CreateEvent">Add Event</a>

<hr />

<h3>Industry Contact Log</h3>

<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.IndustryContactLog[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IndustryContactLog[0].Company)
            </th>
            <th>
                Contact Information
            </th>
            <th>
                Progress Notes
            </th>
            <th>
                Date Met
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.IndustryContactLog)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Company)
                </td>
                <td>
                    @foreach (var info in Model.IndustryContactInfo.Where(s => s.ContactId == item.ContactId))
                    {
                        <ul>
                            <li>
                                @Html.DisplayFor(modelItem => info.ContactDetails)
                            </li>
                        </ul>

                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Notes)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateMet)
                </td>
                <td>
                    <div class="icon-display">
                        <a asp-page="EditContact" asp-route-id="@item.ContactId">
                            <img src="~/img/edit-icon-png-3602.png" style="height: 30px; width: 30px;" alt="Description of image" title="Edit Event">
                        </a>
                        <form asp-page-handler="Delete" method="post" asp-route-id="@item.ContactId" onsubmit="return confirm('Are you sure you want to delete this contact?');" title="Delete Contact">
                            <button class="delete-button" name="action" value="deleteContact" type="submit">
                                <img src="~/img/garbage-bin-png-10491.png" style="height: 40px; width: 40px;" alt="Delete Contact">
                            </button>
                        </form>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>


<a class="btn btn-success" asp-page="CreateContact">Add Contact</a>


@section Scripts {

    <script>
        document.addEventListener('DOMContentLoaded', function () {

              const pitchTextarea = document.getElementById('Pitch');
              const editBtn = document.getElementById('editBtn');
              const submitBtn = document.getElementById('submitBtn');
              const cancelBtn = document.getElementById('cancelBtn');
              const createBtn = document.getElementById('createBtn');

              if (pitchTextarea) {
                  let originalPitchText = pitchTextarea.value;

                  const switchToEditMode = () => {
                      pitchTextarea.readOnly = false;
                      pitchTextarea.classList.remove('display-mode');
                      pitchTextarea.focus();

                      pitchTextarea.style.border = 'none';
                      pitchTextarea.style.resize = 'none';

                      if (editBtn) editBtn.style.display = 'none';
                      if (createBtn) createBtn.style.display = 'none';

                      submitBtn.style.display = 'inline-block';
                      cancelBtn.style.display = 'inline-block';
                  };

                  const switchToDisplayMode = () => {
                      pitchTextarea.readOnly = true;
                      pitchTextarea.classList.add('display-mode');

                      pitchTextarea.style.border = 'none';
                      pitchTextarea.style.resize = 'none';
                      pitchTextarea.style.background = 'transparent';

                      if (editBtn) editBtn.style.display = 'inline-block';
                      if (createBtn) createBtn.style.display = 'inline-block';

                      submitBtn.style.display = 'none';
                      cancelBtn.style.display = 'none';
                  };

                  if (editBtn) {
                       editBtn.addEventListener('click', switchToEditMode);
                  }

                  if (createBtn) {
                       createBtn.addEventListener('click', switchToEditMode);
                  }

                  cancelBtn.addEventListener('click', () => {
                      pitchTextarea.value = originalPitchText;
                      switchToDisplayMode();
                  });

                  switchToDisplayMode();
              }

          });

    </script>

}

