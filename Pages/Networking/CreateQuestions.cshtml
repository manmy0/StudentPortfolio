@page
@model StudentPortfolio.Pages.Networking.CreateQuestionsModel

@{
    ViewData["Title"] = "CreateQuestions";
}


<h3>Create Steps</h3>

<hr />

<div>
    <h3> Event: @Model.NetworkingEvent[0].Name</h3>
</div>

<div class="test">
    <form method="post">
        <div id="questionContainer">
            @for (int i = 0; i < Model.NetworkingQuestions.Count; i++)
            {
                <div class="item-row">
                    <label for="question">Question</label>
                    <input class="form-control w-auto" style="margin-bottom: 20px" asp-for="NetworkingQuestions[i].Question" />
                </div>
            }
        </div>
        <div>
            <button class="btn btn-primary" id="addRowButton" type="button">Add Another Question</button>
            <button class="btn btn-success" type="submit">Save All Questions</button>
        </div>
    </form>

    <div style="margin-top: 20px;">
        <a class="btn btn-secondary" asp-page="Networking">Back to Networking</a>
    </div>

</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.getElementById('addRowButton').addEventListener('click', function () {
            const container = document.getElementById('questionContainer');
            const index = container.children.length; // Get the next index

            const newRow = document.createElement('div');
            newRow.classList.add('item-row');
            newRow.innerHTML = `
                <label for="question">Question</label>
                <input class="form-control w-auto" style="margin-bottom: 20px" name="NetworkingQuestions[${index}].Question" />

            `;
            container.appendChild(newRow);
        });
    </script>
}
